#include<bits/stdc++.h>
using namespace std;
int merge(vector<int>& arr, int s, int mid, int e) {
    vector<int> temp;
    int left = s;
    int right = mid + 1;
    int cnt = 0;
    while (left <= mid && right <= e) {
        if (arr[left] <= arr[right]) {
            temp.push_back(arr[left]);
            left++;
        } else {
            temp.push_back(arr[right]);
            cnt += (mid - left + 1);
            right++;
        }
    }
    while (left <= mid) {
        temp.push_back(arr[left]);
        left++;
    }
    while (right <= e) {
        temp.push_back(arr[right]);
        right++;
    }
    for (int i = s; i <= e; i++) {
        arr[i] = temp[i - s];
    }
    return cnt;
}

int countInversions(vector<int>& arr, int s, int e) {
    int cnt = 0;
    // Base case
    if (s >= e) return cnt;
    int mid = s + (e - s) / 2;
    cnt += countInversions(arr, s, mid); // Checking left part
    cnt += countInversions(arr, mid + 1, e); // Checking right part
    cnt += merge(arr, s, mid, e);
    return cnt;
}

int main() {
    vector<int> arr = {5, 3, 2, 1, 4};
    int n = arr.size();
    cout << "No Of Inversions: " << countInversions(arr, 0, n - 1) << endl;
    return 0;
}
